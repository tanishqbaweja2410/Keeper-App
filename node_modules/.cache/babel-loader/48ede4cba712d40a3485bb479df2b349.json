{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\HP DEMO\\\\Desktop\\\\web development\\\\Keeper APP\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";\nimport _objectSpread from \"C:\\\\Users\\\\HP DEMO\\\\Desktop\\\\web development\\\\Keeper APP\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\HP DEMO\\\\Desktop\\\\web development\\\\Keeper APP\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP DEMO\\\\Desktop\\\\web development\\\\Keeper APP\\\\src\\\\components\\\\CreateArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateArea(props) {\n  _s();\n\n  var _useState = useState({\n    title: '',\n    content: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      note = _useState2[0],\n      setNote = _useState2[1];\n\n  function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setNote(function (prevNote) {\n      return _objectSpread(_objectSpread({}, prevNote), {}, _defineProperty({}, name, value));\n    });\n  }\n\n  function handleClick(event) {\n    props.onAdd(note);\n    setNote({\n      title: '',\n      content: ''\n    });\n    event.preventDefault();\n  }\n\n  function expand() {\n    setExpanded(true);\n  }\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isExpanded = _useState4[0],\n      setExpanded = _useState4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create-note\",\n      children: [isExpanded ? /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        value: note.title,\n        placeholder: \"Title\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onClick: expand,\n        name: \"content\",\n        value: note.content,\n        placeholder: \"Take a note...\",\n        rows: isExpanded ? 3 : 1,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Zoom, {\n        in: isExpanded,\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateArea, \"W3QCOIMzeGBjU7xBkmkYO4MW2Qg=\");\n\n_c = CreateArea;\nexport default CreateArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateArea\");","map":{"version":3,"sources":["C:/Users/HP DEMO/Desktop/web development/Keeper APP/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","title","content","note","setNote","handleChange","event","target","name","value","prevNote","handleClick","onAdd","preventDefault","expand","setExpanded","isExpanded"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAGA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,kBAAwBL,QAAQ,CAAC;AAC/BM,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAIA,WAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAE5B,wBAAwBA,KAAK,CAACC,MAA9B;AAAA,QAAQC,IAAR,iBAAQA,IAAR;AAAA,QAAcC,KAAd,iBAAcA,KAAd;AACAL,IAAAA,OAAO,CAAC,UAAAM,QAAQ,EAAI;AAClB,6CAAYA,QAAZ,2BAAuBF,IAAvB,EAA8BC,KAA9B;AACD,KAFM,CAAP;AAGD;;AACD,WAASE,WAAT,CAAsBL,KAAtB,EAA6B;AAC3BN,IAAAA,KAAK,CAACY,KAAN,CAAYT,IAAZ;AACAC,IAAAA,OAAO,CAAC;AACNH,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH,KAAD,CAAP;AAIAI,IAAAA,KAAK,CAACO,cAAN;AACD;;AACD,WAASC,MAAT,GAAiB;AACfC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACD,mBAA8BpB,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAMqB,UAAN;AAAA,MAAiBD,WAAjB;;AACA,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,iBACCC,UAAU,gBAAC;AACR,QAAA,IAAI,EAAC,OADG;AAER,QAAA,KAAK,EAAEb,IAAI,CAACF,KAFJ;AAGR,QAAA,WAAW,EAAC,OAHJ;AAIR,QAAA,QAAQ,EAAEI;AAJF;AAAA;AAAA;AAAA;AAAA,cAAD,GAKN,IANL,eAQE;AACA,QAAA,OAAO,EAAES,MADT;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,KAAK,EAAEX,IAAI,CAACD,OAHd;AAIE,QAAA,WAAW,EAAC,gBAJd;AAKE,QAAA,IAAI,EAAEc,UAAU,GAAC,CAAD,GAAG,CALrB;AAME,QAAA,QAAQ,EAAEX;AANZ;AAAA;AAAA;AAAA;AAAA,cARF,eAgBE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEW,UAAV;AAAA,+BACA,QAAC,GAAD;AAAK,UAAA,OAAO,EAAEL,WAAd;AAAA,iCAA2B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAhDQZ,U;;KAAAA,U;AAkDT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\n\r\nfunction CreateArea (props) {\r\n  const [note, setNote] = useState({\r\n    title: '',\r\n    content: ''\r\n  })\r\n  function handleChange (event) {\r\n\r\n    const { name, value } = event.target\r\n    setNote(prevNote => {\r\n      return { ...prevNote, [name]: value }\r\n    })\r\n  }\r\n  function handleClick (event) {\r\n    props.onAdd(note)\r\n    setNote({\r\n      title: '',\r\n      content: ''\r\n    })\r\n    event.preventDefault()\r\n  }\r\n  function expand(){\r\n    setExpanded(true);\r\n  }\r\n  const[isExpanded,setExpanded]=useState(false);\r\n  return (\r\n    <div>\r\n      <form className='create-note'>\r\n      {isExpanded?<input\r\n          name='title'\r\n          value={note.title}\r\n          placeholder='Title'\r\n          onChange={handleChange}\r\n        />:null}\r\n        \r\n        <textarea\r\n        onClick={expand}\r\n          name='content'\r\n          value={note.content}\r\n          placeholder='Take a note...'\r\n          rows={isExpanded?3:1}\r\n          onChange={handleChange}\r\n        />\r\n        <Zoom in={isExpanded}>\r\n        <Fab onClick={handleClick}><AddIcon/></Fab>\r\n        </Zoom>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateArea\r\n"]},"metadata":{},"sourceType":"module"}